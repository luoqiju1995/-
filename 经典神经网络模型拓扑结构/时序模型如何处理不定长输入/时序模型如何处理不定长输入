torch.nn.utils.rnn.pad_packed_sequence

from torch.nn.utils.rnn import pad_sequence
a = torch.ones(25, 300)
b = torch.ones(22, 300)
c = torch.ones(15, 300)
print(pad_sequence([a, b, c]).size())
torch.Size([25, 3, 300])

seq = pad_sequence([a, b, c], batch_first=True)
print(seq.shape)
torch.Size([3, 25, 300])

seq = torch.tensor([[1, 2, 0], [3, 0, 0], [4, 5, 6]])
lens = [2, 1, 3]
packed = pack_padded_sequence(seq, lens, batch_first=True, enforce_sorted=False)
print(packed)
print(seq)

PackedSequence(data=tensor([4, 1, 3, 5, 2, 6]), batch_sizes=tensor([3, 2, 1]), sorted_indices=tensor([2, 0, 1]), unsorted_indices=tensor([1, 2, 0]))
tensor([[1, 2, 0],
        [3, 0, 0],
        [4, 5, 6]])

enforce_sorted=False 把 [[1, 2, 0], [3, 0, 0], [4, 5, 6]] 按照 batch_sizes=tensor([3, 2, 1]) 重新排序
结果为：[[4, 5, 6], [1, 2, 0], [3, 0, 0]]
再进行pack_padded [4, 1, 3, 5, 2, 6]
